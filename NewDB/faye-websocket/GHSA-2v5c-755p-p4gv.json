{
  "schema_version": "1.4.0",
  "id": "GHSA-2v5c-755p-p4gv",
  "modified": "2021-11-19T15:42:54Z",
  "published": "2020-07-31T17:40:04Z",
  "aliases": [
    "CVE-2020-15133"
  ],
  "summary": "Missing TLS certificate verification in faye-websocket",
  "details": "The `Faye::WebSocket::Client` class uses the [`EM::Connection#start_tls`][1]\nmethod in [EventMachine][2] to implement the TLS handshake whenever a `wss:` URL\nis used for the connection. This method does not implement certificate\nverification by default, meaning that it does not check that the server presents\na valid and trusted TLS certificate for the expected hostname. That means that\nany `wss:` connection made using this library is vulnerable to a\nman-in-the-middle attack, since it does not confirm the identity of the server\nit is connected to.\n\nThis has been a requested feature in EventMachine for many years now; see for\nexample [#275][3], [#378][4], and [#814][5]. In June 2020, [em-http-request][6]\npublished an [advisory][7] related to this problem and fixed it by [implementing\nTLS verification][8] in their own codebase; although EventMachine does not\nimplement certificate verification itself, it provides an extension point for\nthe caller to implement it, called [`ssl_verify_peer`][9]. Based on this\nimplementation, we have incorporated similar functionality into [faye-websocket\nfor Ruby][10], such that we use the `OpenSSL` module to perform two checks:\n\n- The chain of certificates presented by the server is valid and ultimately\n  trusted by your root certificate set -- either your system default root\n  certificates, or a set provided at runtime\n- The final certificate presented by the server is valid for the hostname used\n  in the request URI; if the connection is made via a proxy we use the hostname\n  from the request, not the proxy's hostname\n\nAfter implementing verification in v1.1.6, em-http-request has elected to leave\nthe `:verify_peer` option switched off by default. We have decided to _enable_\nthis option by default in faye-websocket, but are publishing a minor release\nwith added functionality for configuring it. We are mindful of the fact that\nthis may break existing programs, but we consider it much more important that\nall clients have TLS verification turned on by default. A client that is not\ncarrying out verification is either:\n\n- talking to the expected server, and will not break under this change\n- being attacked, and would benefit from being alerted to this fact\n- deliberately talking to a server that would be rejected by verification\n\nThe latter case includes situations like talking to a non-public server using a\nself-signed certificate. We consider this use case to be \"working by accident\",\nrather than functionality that was actively supported, and it should be properly\nand explicitly supported instead. To that end, we have added two new options to\nthe `Faye::WebSocket::Client` constructor: `tls.root_cert_file`, and\n`tls.verify_peer`.\n\nThe `:root_cert_file` option lets you provide a different set of root\ncertificates in situations where you don't want to use your system's default\nroot certificates to verify the remote host. It should be a path or an array of\npaths identifying the certificates to use instead of the defaults.\n\n```rb\nclient = Faye::WebSocket::Client.new('wss://example.com/', [], tls: {\n  root_cert_file: 'path/to/certificate.pem'\n})\n```\n\nThe `:verify_peer` option lets you turn verification off entirely. This should\nbe a last resort and we recommend using the `:root_cert_file` option if\npossible.\n\n```rb\nclient = Faye::WebSocket::Client.new('wss://example.com/', [], tls: {\n  verify_peer: false\n})\n```\n\nTo get the new behaviour, please upgrade to v0.11.0 of the [Rubygems\npackage][10]. There are, unfortunately, no workarounds for this issue, as you\ncannot enable `:verify_peer` in EventMachine unless the calling library contains\nan implementation of `ssl_verify_peer` that actually checks the server's\ncertificates.\n\nFor further background information on this issue, please see [faye#524][12] and\n[faye-websocket#129][13]. We would like to thank [Tero Marttila][14] and [Daniel\nMorsing][15] for providing invaluable assistance and feedback on this issue.\n\n[1]: https://www.rubydoc.info/github/eventmachine/eventmachine/EventMachine/Connection:start_tls\n[2]: https://rubygems.org/gems/eventmachine\n[3]: https://github.com/eventmachine/eventmachine/issues/275\n[4]: https://github.com/eventmachine/eventmachine/pull/378\n[5]: https://github.com/eventmachine/eventmachine/issues/814\n[6]: https://rubygems.org/gems/em-http-request\n[7]: https://securitylab.github.com/advisories/GHSL-2020-094-igrigorik-em-http-request\n[8]: https://github.com/igrigorik/em-http-request/pull/340\n[9]: https://www.rubydoc.info/github/eventmachine/eventmachine/EventMachine/Connection:ssl_verify_peer\n[10]: https://rubygems.org/gems/faye-websocket\n[12]: https://github.com/faye/faye/issues/524\n[13]: https://github.com/faye/faye-websocket-ruby/pull/129\n[14]: https://github.com/SpComb\n[15]: https://github.com/DanielMorsing",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "RubyGems",
        "name": "faye-websocket"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "0.11.0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/faye/faye-websocket-ruby/security/advisories/GHSA-2v5c-755p-p4gv"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-15133"
    },
    {
      "type": "WEB",
      "url": "https://github.com/eventmachine/eventmachine/issues/275"
    },
    {
      "type": "WEB",
      "url": "https://github.com/eventmachine/eventmachine/issues/814"
    },
    {
      "type": "WEB",
      "url": "https://github.com/faye/faye/issues/524"
    },
    {
      "type": "WEB",
      "url": "https://github.com/eventmachine/eventmachine/pull/378"
    },
    {
      "type": "WEB",
      "url": "https://github.com/faye/faye-websocket-ruby/pull/129"
    },
    {
      "type": "WEB",
      "url": "https://github.com/igrigorik/em-http-request/pull/340"
    },
    {
      "type": "WEB",
      "url": "https://blog.jcoglan.com/2020/07/31/missing-tls-verification-in-faye/"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/faye/faye-websocket-ruby"
    },
    {
      "type": "ADVISORY",
      "url": "https://securitylab.github.com/advisories/GHSL-2020-094-igrigorik-em-http-request"
    },
    {
      "type": "WEB",
      "url": "https://www.rubydoc.info/github/eventmachine/eventmachine/EventMachine/Connection:ssl_verify_peer"
    },
    {
      "type": "WEB",
      "url": "https://www.rubydoc.info/github/eventmachine/eventmachine/EventMachine/Connection:start_tls"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-295"
    ],
    "severity": "HIGH",
    "github_reviewed": true,
    "github_reviewed_at": "2020-07-31T17:39:00Z",
    "nvd_published_at": "2020-07-31T18:15:00Z"
  }
}