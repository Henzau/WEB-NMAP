{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/blood/Documents/School/4A/PST/PST4A/MUSIARK/pst-4a-MusIA/app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"C:/Users/blood/Documents/School/4A/PST/PST4A/MUSIARK/pst-4a-MusIA/app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"C:/Users/blood/Documents/School/4A/PST/PST4A/MUSIARK/pst-4a-MusIA/app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/blood/Documents/School/4A/PST/PST4A/MUSIARK/pst-4a-MusIA/app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar _marked = /*#__PURE__*/_regeneratorRuntime().mark(flatIterable);\nimport Delaunator from \"delaunator\";\nimport Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\nimport Voronoi from \"./voronoi.js\";\nvar tau = 2 * Math.PI,\n  pow = Math.pow;\nfunction pointX(p) {\n  return p[0];\n}\nfunction pointY(p) {\n  return p[1];\n}\n\n// A triangulation is collinear if all its triangles have a non-null area\nfunction collinear(d) {\n  var triangles = d.triangles,\n    coords = d.coords;\n  for (var i = 0; i < triangles.length; i += 3) {\n    var a = 2 * triangles[i],\n      b = 2 * triangles[i + 1],\n      c = 2 * triangles[i + 2],\n      cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1]) - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\n    if (cross > 1e-10) return false;\n  }\n  return true;\n}\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n}\nvar Delaunay = /*#__PURE__*/function () {\n  function Delaunay(points) {\n    _classCallCheck(this, Delaunay);\n    this._delaunator = new Delaunator(points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = this._delaunator.coords;\n    this._init();\n  }\n  _createClass(Delaunay, [{\n    key: \"update\",\n    value: function update() {\n      this._delaunator.update();\n      this._init();\n      return this;\n    }\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      var d = this._delaunator,\n        points = this.points;\n\n      // check for collinear\n      if (d.hull && d.hull.length > 2 && collinear(d)) {\n        this.collinear = Int32Array.from({\n          length: points.length / 2\n        }, function (_, i) {\n          return i;\n        }).sort(function (i, j) {\n          return points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1];\n        }); // for exact neighbors\n        var e = this.collinear[0],\n          f = this.collinear[this.collinear.length - 1],\n          bounds = [points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1]],\n          r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\n        for (var i = 0, n = points.length / 2; i < n; ++i) {\n          var p = jitter(points[2 * i], points[2 * i + 1], r);\n          points[2 * i] = p[0];\n          points[2 * i + 1] = p[1];\n        }\n        this._delaunator = new Delaunator(points);\n      } else {\n        delete this.collinear;\n      }\n      var halfedges = this.halfedges = this._delaunator.halfedges;\n      var hull = this.hull = this._delaunator.hull;\n      var triangles = this.triangles = this._delaunator.triangles;\n      var inedges = this.inedges.fill(-1);\n      var hullIndex = this._hullIndex.fill(-1);\n\n      // Compute an index from each point to an (arbitrary) incoming halfedge\n      // Used to give the first neighbor of each point; for this reason,\n      // on the hull we give priority to exterior halfedges\n      for (var _e = 0, _n = halfedges.length; _e < _n; ++_e) {\n        var _p = triangles[_e % 3 === 2 ? _e - 2 : _e + 1];\n        if (halfedges[_e] === -1 || inedges[_p] === -1) inedges[_p] = _e;\n      }\n      for (var _i = 0, _n2 = hull.length; _i < _n2; ++_i) {\n        hullIndex[hull[_i]] = _i;\n      }\n\n      // degenerate case: 1 or 2 (distinct) points\n      if (hull.length <= 2 && hull.length > 0) {\n        this.triangles = new Int32Array(3).fill(-1);\n        this.halfedges = new Int32Array(3).fill(-1);\n        this.triangles[0] = hull[0];\n        inedges[hull[0]] = 1;\n        if (hull.length === 2) {\n          inedges[hull[1]] = 0;\n          this.triangles[1] = hull[1];\n          this.triangles[2] = hull[1];\n        }\n      }\n    }\n  }, {\n    key: \"voronoi\",\n    value: function voronoi(bounds) {\n      return new Voronoi(this, bounds);\n    }\n  }, {\n    key: \"neighbors\",\n    value: /*#__PURE__*/_regeneratorRuntime().mark(function neighbors(i) {\n      var inedges, hull, _hullIndex, halfedges, triangles, collinear, l, e0, e, p0, p;\n      return _regeneratorRuntime().wrap(function neighbors$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            inedges = this.inedges, hull = this.hull, _hullIndex = this._hullIndex, halfedges = this.halfedges, triangles = this.triangles, collinear = this.collinear; // degenerate case with several collinear points\n            if (!collinear) {\n              _context.next = 10;\n              break;\n            }\n            l = collinear.indexOf(i);\n            if (!(l > 0)) {\n              _context.next = 6;\n              break;\n            }\n            _context.next = 6;\n            return collinear[l - 1];\n          case 6:\n            if (!(l < collinear.length - 1)) {\n              _context.next = 9;\n              break;\n            }\n            _context.next = 9;\n            return collinear[l + 1];\n          case 9:\n            return _context.abrupt(\"return\");\n          case 10:\n            e0 = inedges[i];\n            if (!(e0 === -1)) {\n              _context.next = 13;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 13:\n            // coincident point\n            e = e0, p0 = -1;\n          case 14:\n            _context.next = 16;\n            return p0 = triangles[e];\n          case 16:\n            e = e % 3 === 2 ? e - 2 : e + 1;\n            if (!(triangles[e] !== i)) {\n              _context.next = 19;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 19:\n            // bad triangulation\n            e = halfedges[e];\n            if (!(e === -1)) {\n              _context.next = 26;\n              break;\n            }\n            p = hull[(_hullIndex[i] + 1) % hull.length];\n            if (!(p !== p0)) {\n              _context.next = 25;\n              break;\n            }\n            _context.next = 25;\n            return p;\n          case 25:\n            return _context.abrupt(\"return\");\n          case 26:\n            if (e !== e0) {\n              _context.next = 14;\n              break;\n            }\n          case 27:\n          case \"end\":\n            return _context.stop();\n        }\n      }, neighbors, this);\n    })\n  }, {\n    key: \"find\",\n    value: function find(x, y) {\n      var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n      var i0 = i;\n      var c;\n      while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;\n      return c;\n    }\n  }, {\n    key: \"_step\",\n    value: function _step(i, x, y) {\n      var inedges = this.inedges,\n        hull = this.hull,\n        _hullIndex = this._hullIndex,\n        halfedges = this.halfedges,\n        triangles = this.triangles,\n        points = this.points;\n      if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n      var c = i;\n      var dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\n      var e0 = inedges[i];\n      var e = e0;\n      do {\n        var t = triangles[e];\n        var dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\n        if (dt < dc) dc = dt, c = t;\n        e = e % 3 === 2 ? e - 2 : e + 1;\n        if (triangles[e] !== i) break; // bad triangulation\n        e = halfedges[e];\n        if (e === -1) {\n          e = hull[(_hullIndex[i] + 1) % hull.length];\n          if (e !== t) {\n            if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\n          }\n          break;\n        }\n      } while (e !== e0);\n      return c;\n    }\n  }, {\n    key: \"render\",\n    value: function render(context) {\n      var buffer = context == null ? context = new Path() : undefined;\n      var points = this.points,\n        halfedges = this.halfedges,\n        triangles = this.triangles;\n      for (var i = 0, n = halfedges.length; i < n; ++i) {\n        var j = halfedges[i];\n        if (j < i) continue;\n        var ti = triangles[i] * 2;\n        var tj = triangles[j] * 2;\n        context.moveTo(points[ti], points[ti + 1]);\n        context.lineTo(points[tj], points[tj + 1]);\n      }\n      this.renderHull(context);\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"renderPoints\",\n    value: function renderPoints(context, r) {\n      if (r === undefined && (!context || typeof context.moveTo !== \"function\")) r = context, context = null;\n      r = r == undefined ? 2 : +r;\n      var buffer = context == null ? context = new Path() : undefined;\n      var points = this.points;\n      for (var i = 0, n = points.length; i < n; i += 2) {\n        var x = points[i],\n          y = points[i + 1];\n        context.moveTo(x + r, y);\n        context.arc(x, y, r, 0, tau);\n      }\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"renderHull\",\n    value: function renderHull(context) {\n      var buffer = context == null ? context = new Path() : undefined;\n      var hull = this.hull,\n        points = this.points;\n      var h = hull[0] * 2,\n        n = hull.length;\n      context.moveTo(points[h], points[h + 1]);\n      for (var i = 1; i < n; ++i) {\n        var _h = 2 * hull[i];\n        context.lineTo(points[_h], points[_h + 1]);\n      }\n      context.closePath();\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"hullPolygon\",\n    value: function hullPolygon() {\n      var polygon = new Polygon();\n      this.renderHull(polygon);\n      return polygon.value();\n    }\n  }, {\n    key: \"renderTriangle\",\n    value: function renderTriangle(i, context) {\n      var buffer = context == null ? context = new Path() : undefined;\n      var points = this.points,\n        triangles = this.triangles;\n      var t0 = triangles[i *= 3] * 2;\n      var t1 = triangles[i + 1] * 2;\n      var t2 = triangles[i + 2] * 2;\n      context.moveTo(points[t0], points[t0 + 1]);\n      context.lineTo(points[t1], points[t1 + 1]);\n      context.lineTo(points[t2], points[t2 + 1]);\n      context.closePath();\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"trianglePolygons\",\n    value: /*#__PURE__*/_regeneratorRuntime().mark(function trianglePolygons() {\n      var triangles, i, n;\n      return _regeneratorRuntime().wrap(function trianglePolygons$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            triangles = this.triangles;\n            i = 0, n = triangles.length / 3;\n          case 2:\n            if (!(i < n)) {\n              _context2.next = 8;\n              break;\n            }\n            _context2.next = 5;\n            return this.trianglePolygon(i);\n          case 5:\n            ++i;\n            _context2.next = 2;\n            break;\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, trianglePolygons, this);\n    })\n  }, {\n    key: \"trianglePolygon\",\n    value: function trianglePolygon(i) {\n      var polygon = new Polygon();\n      this.renderTriangle(i, polygon);\n      return polygon.value();\n    }\n  }], [{\n    key: \"from\",\n    value: function from(points) {\n      var fx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : pointX;\n      var fy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : pointY;\n      var that = arguments.length > 3 ? arguments[3] : undefined;\n      return new Delaunay(\"length\" in points ? flatArray(points, fx, fy, that) : Float64Array.from(flatIterable(points, fx, fy, that)));\n    }\n  }]);\n  return Delaunay;\n}();\nexport { Delaunay as default };\nfunction flatArray(points, fx, fy, that) {\n  var n = points.length;\n  var array = new Float64Array(n * 2);\n  for (var i = 0; i < n; ++i) {\n    var p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n  return array;\n}\nfunction flatIterable(points, fx, fy, that) {\n  var i, _iterator, _step2, p;\n  return _regeneratorRuntime().wrap(function flatIterable$(_context3) {\n    while (1) switch (_context3.prev = _context3.next) {\n      case 0:\n        i = 0;\n        _iterator = _createForOfIteratorHelper(points);\n        _context3.prev = 2;\n        _iterator.s();\n      case 4:\n        if ((_step2 = _iterator.n()).done) {\n          _context3.next = 13;\n          break;\n        }\n        p = _step2.value;\n        _context3.next = 8;\n        return fx.call(that, p, i, points);\n      case 8:\n        _context3.next = 10;\n        return fy.call(that, p, i, points);\n      case 10:\n        ++i;\n      case 11:\n        _context3.next = 4;\n        break;\n      case 13:\n        _context3.next = 18;\n        break;\n      case 15:\n        _context3.prev = 15;\n        _context3.t0 = _context3[\"catch\"](2);\n        _iterator.e(_context3.t0);\n      case 18:\n        _context3.prev = 18;\n        _iterator.f();\n        return _context3.finish(18);\n      case 21:\n      case \"end\":\n        return _context3.stop();\n    }\n  }, _marked, null, [[2, 15, 18, 21]]);\n}","map":{"version":3,"names":["flatIterable","Delaunator","Path","Polygon","Voronoi","tau","Math","PI","pow","pointX","p","pointY","collinear","d","triangles","coords","i","length","a","b","c","cross","jitter","x","y","r","sin","cos","Delaunay","points","_delaunator","inedges","Int32Array","_hullIndex","_init","update","hull","from","_","sort","j","e","f","bounds","hypot","n","halfedges","fill","hullIndex","l","indexOf","e0","p0","i0","_step","dc","t","dt","context","buffer","undefined","ti","tj","moveTo","lineTo","renderHull","value","arc","h","closePath","polygon","t0","t1","t2","trianglePolygon","renderTriangle","fx","fy","that","flatArray","Float64Array","array","call"],"sources":["C:/Users/blood/Documents/School/4A/PST/PST4A/MUSIARK/pst-4a-MusIA/app/node_modules/d3-delaunay/src/delaunay.js"],"sourcesContent":["import Delaunator from \"delaunator\";\nimport Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\nimport Voronoi from \"./voronoi.js\";\n\nconst tau = 2 * Math.PI, pow = Math.pow;\n\nfunction pointX(p) {\n  return p[0];\n}\n\nfunction pointY(p) {\n  return p[1];\n}\n\n// A triangulation is collinear if all its triangles have a non-null area\nfunction collinear(d) {\n  const {triangles, coords} = d;\n  for (let i = 0; i < triangles.length; i += 3) {\n    const a = 2 * triangles[i],\n          b = 2 * triangles[i + 1],\n          c = 2 * triangles[i + 2],\n          cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1])\n                - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\n    if (cross > 1e-10) return false;\n  }\n  return true;\n}\n\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n}\n\nexport default class Delaunay {\n  static from(points, fx = pointX, fy = pointY, that) {\n    return new Delaunay(\"length\" in points\n        ? flatArray(points, fx, fy, that)\n        : Float64Array.from(flatIterable(points, fx, fy, that)));\n  }\n  constructor(points) {\n    this._delaunator = new Delaunator(points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = this._delaunator.coords;\n    this._init();\n  }\n  update() {\n    this._delaunator.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const d = this._delaunator, points = this.points;\n\n    // check for collinear\n    if (d.hull && d.hull.length > 2 && collinear(d)) {\n      this.collinear = Int32Array.from({length: points.length/2}, (_,i) => i)\n        .sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors\n      const e = this.collinear[0], f = this.collinear[this.collinear.length - 1],\n        bounds = [ points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1] ],\n        r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\n      for (let i = 0, n = points.length / 2; i < n; ++i) {\n        const p = jitter(points[2 * i], points[2 * i + 1], r);\n        points[2 * i] = p[0];\n        points[2 * i + 1] = p[1];\n      }\n      this._delaunator = new Delaunator(points);\n    } else {\n      delete this.collinear;\n    }\n\n    const halfedges = this.halfedges = this._delaunator.halfedges;\n    const hull = this.hull = this._delaunator.hull;\n    const triangles = this.triangles = this._delaunator.triangles;\n    const inedges = this.inedges.fill(-1);\n    const hullIndex = this._hullIndex.fill(-1);\n\n    // Compute an index from each point to an (arbitrary) incoming halfedge\n    // Used to give the first neighbor of each point; for this reason,\n    // on the hull we give priority to exterior halfedges\n    for (let e = 0, n = halfedges.length; e < n; ++e) {\n      const p = triangles[e % 3 === 2 ? e - 2 : e + 1];\n      if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;\n    }\n    for (let i = 0, n = hull.length; i < n; ++i) {\n      hullIndex[hull[i]] = i;\n    }\n\n    // degenerate case: 1 or 2 (distinct) points\n    if (hull.length <= 2 && hull.length > 0) {\n      this.triangles = new Int32Array(3).fill(-1);\n      this.halfedges = new Int32Array(3).fill(-1);\n      this.triangles[0] = hull[0];\n      inedges[hull[0]] = 1;\n      if (hull.length === 2) {\n        inedges[hull[1]] = 0;\n        this.triangles[1] = hull[1];\n        this.triangles[2] = hull[1];\n      }\n    }\n  }\n  voronoi(bounds) {\n    return new Voronoi(this, bounds);\n  }\n  *neighbors(i) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, collinear} = this;\n\n    // degenerate case with several collinear points\n    if (collinear) {\n      const l = collinear.indexOf(i);\n      if (l > 0) yield collinear[l - 1];\n      if (l < collinear.length - 1) yield collinear[l + 1];\n      return;\n    }\n\n    const e0 = inedges[i];\n    if (e0 === -1) return; // coincident point\n    let e = e0, p0 = -1;\n    do {\n      yield p0 = triangles[e];\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) return; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        const p = hull[(_hullIndex[i] + 1) % hull.length];\n        if (p !== p0) yield p;\n        return;\n      }\n    } while (e !== e0);\n  }\n  find(x, y, i = 0) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n    const i0 = i;\n    let c;\n    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;\n    return c;\n  }\n  _step(i, x, y) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, points} = this;\n    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n    let c = i;\n    let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\n    const e0 = inedges[i];\n    let e = e0;\n    do {\n      let t = triangles[e];\n      const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\n      if (dt < dc) dc = dt, c = t;\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        e = hull[(_hullIndex[i] + 1) % hull.length];\n        if (e !== t) {\n          if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\n        }\n        break;\n      }\n    } while (e !== e0);\n    return c;\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, halfedges, triangles} = this;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = triangles[i] * 2;\n      const tj = triangles[j] * 2;\n      context.moveTo(points[ti], points[ti + 1]);\n      context.lineTo(points[tj], points[tj + 1]);\n    }\n    this.renderHull(context);\n    return buffer && buffer.value();\n  }\n  renderPoints(context, r) {\n    if (r === undefined && (!context || typeof context.moveTo !== \"function\")) r = context, context = null;\n    r = r == undefined ? 2 : +r;\n    const buffer = context == null ? context = new Path : undefined;\n    const {points} = this;\n    for (let i = 0, n = points.length; i < n; i += 2) {\n      const x = points[i], y = points[i + 1];\n      context.moveTo(x + r, y);\n      context.arc(x, y, r, 0, tau);\n    }\n    return buffer && buffer.value();\n  }\n  renderHull(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {hull, points} = this;\n    const h = hull[0] * 2, n = hull.length;\n    context.moveTo(points[h], points[h + 1]);\n    for (let i = 1; i < n; ++i) {\n      const h = 2 * hull[i];\n      context.lineTo(points[h], points[h + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  hullPolygon() {\n    const polygon = new Polygon;\n    this.renderHull(polygon);\n    return polygon.value();\n  }\n  renderTriangle(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, triangles} = this;\n    const t0 = triangles[i *= 3] * 2;\n    const t1 = triangles[i + 1] * 2;\n    const t2 = triangles[i + 2] * 2;\n    context.moveTo(points[t0], points[t0 + 1]);\n    context.lineTo(points[t1], points[t1 + 1]);\n    context.lineTo(points[t2], points[t2 + 1]);\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *trianglePolygons() {\n    const {triangles} = this;\n    for (let i = 0, n = triangles.length / 3; i < n; ++i) {\n      yield this.trianglePolygon(i);\n    }\n  }\n  trianglePolygon(i) {\n    const polygon = new Polygon;\n    this.renderTriangle(i, polygon);\n    return polygon.value();\n  }\n}\n\nfunction flatArray(points, fx, fy, that) {\n  const n = points.length;\n  const array = new Float64Array(n * 2);\n  for (let i = 0; i < n; ++i) {\n    const p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n  return array;\n}\n\nfunction* flatIterable(points, fx, fy, that) {\n  let i = 0;\n  for (const p of points) {\n    yield fx.call(that, p, i, points);\n    yield fy.call(that, p, i, points);\n    ++i;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}