{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blood\\\\Documents\\\\School\\\\4A\\\\PST\\\\PST4A\\\\MUSIARK\\\\pst-4a-MusIA\\\\app\\\\src\\\\Components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport MusiaLogo from '../assets/logo_MusIA.png';\nimport Listening from './Listening';\nimport '../styles/Home.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home(_ref) {\n  _s();\n  let {\n    setIsContent,\n    isListening,\n    setIsListening,\n    isReceiving,\n    setIsReceiving\n  } = _ref;\n  const [id, setId] = useState(\"\");\n  const [finishL, setFinishL] = useState(false);\n  useEffect(() => {\n    if (isListening && !finishL) {\n      navigator.mediaDevices.getUserMedia({\n        audio: true\n      }).then(stream => {\n        const mediaRecorder = new MediaRecorder(stream);\n        let audioChunks = [];\n        mediaRecorder.addEventListener(\"dataavailable\", event => {\n          audioChunks.push(event.data);\n        });\n        mediaRecorder.addEventListener(\"stop\", () => {\n          const audioBlob = new Blob(audioChunks, {\n            type: \"audio/mp3\"\n          });\n          const xhr = new XMLHttpRequest();\n          xhr.onreadystatechange = function () {\n            if (xhr.readyState === 4 && xhr.status === 200) {\n              setId(xhr.responseText);\n              setIsListening(false);\n            }\n          };\n          xhr.open(\"POST\", \"https://ee0c-185-144-25-51.eu.ngrok.io/api/v01/post/audio-blob/\");\n          xhr.setRequestHeader(\"ngrok-skip-browser-warning\", \"69420\");\n          xhr.setRequestHeader(\"Content-Type\", \"audio/mp3\");\n          xhr.send(audioBlob);\n          setIsReceiving(true);\n        });\n        const sleep = time => new Promise(resolve => setTimeout(resolve, time));\n        if (isListening) {\n          mediaRecorder.start();\n          (async () => {\n            await sleep(7000);\n            mediaRecorder.stop();\n            setFinishL(true);\n          })();\n        }\n      }).catch(error => {\n        console.error(error);\n        setIsReceiving(false);\n        setIsListening(false);\n        setIsContent(0);\n      });\n    }\n  }, [isListening, finishL, setIsListening, setIsReceiving, setIsContent]);\n  return isListening || isReceiving ? /*#__PURE__*/_jsxDEV(Listening, {\n    id: id,\n    setIsContent: setIsContent,\n    isReceiving: isReceiving,\n    setIsReceiving: setIsReceiving,\n    setIsListening: setIsListening\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Home\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"transbutton\",\n      alt: \"Stop Listening\",\n      onClick: () => setIsListening(true),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: MusiaLogo,\n        className: \"App-logo-2\",\n        alt: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"NameButton\",\n      children: \"Cliquez sur l'icone pour d\\xE9marrer l'\\xE9coute.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Button\",\n      alt: \"Change to URL\",\n      onClick: () => setIsContent(1),\n      children: \"Test URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"B83AK+0KuxmMRB5QMydIm9qLPJM=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["MusiaLogo","Listening","useEffect","useState","Home","setIsContent","isListening","setIsListening","isReceiving","setIsReceiving","id","setId","finishL","setFinishL","navigator","mediaDevices","getUserMedia","audio","then","stream","mediaRecorder","MediaRecorder","audioChunks","addEventListener","event","push","data","audioBlob","Blob","type","xhr","XMLHttpRequest","onreadystatechange","readyState","status","responseText","open","setRequestHeader","send","sleep","time","Promise","resolve","setTimeout","start","stop","catch","error","console"],"sources":["C:/Users/blood/Documents/School/4A/PST/PST4A/MUSIARK/pst-4a-MusIA/app/src/Components/Home.js"],"sourcesContent":["import MusiaLogo from '../assets/logo_MusIA.png';\r\nimport Listening from './Listening';\r\nimport '../styles/Home.css';\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction Home({setIsContent, isListening, setIsListening, isReceiving, setIsReceiving}) {\r\n  const [id, setId] = useState(\"\");\r\n  const [finishL, setFinishL] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isListening && !finishL) {\r\n      navigator.mediaDevices.getUserMedia({audio: true})\r\n        .then(stream => {\r\n          const mediaRecorder = new MediaRecorder(stream);\r\n          let audioChunks = [];\r\n\r\n          mediaRecorder.addEventListener(\"dataavailable\", event => {\r\n            audioChunks.push(event.data);\r\n          });\r\n\r\n          mediaRecorder.addEventListener(\"stop\", () => {\r\n            const audioBlob = new Blob(audioChunks, {\r\n              type: \"audio/mp3\"\r\n            });\r\n\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function() {\r\n              if (xhr.readyState === 4 && xhr.status === 200) {\r\n                setId(xhr.responseText);\r\n                setIsListening(false);\r\n              }\r\n            };\r\n            xhr.open(\"POST\", \"https://ee0c-185-144-25-51.eu.ngrok.io/api/v01/post/audio-blob/\");\r\n            xhr.setRequestHeader(\"ngrok-skip-browser-warning\", \"69420\");\r\n            xhr.setRequestHeader(\"Content-Type\", \"audio/mp3\");\r\n            xhr.send(audioBlob);\r\n\r\n            setIsReceiving(true);\r\n          });\r\n\r\n          const sleep = time => new Promise(resolve => setTimeout(resolve, time));\r\n\r\n          if (isListening) {\r\n            mediaRecorder.start();\r\n            (async () => {\r\n              await sleep(7000);\r\n              mediaRecorder.stop();\r\n              setFinishL(true);\r\n            })();\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n          setIsReceiving(false);\r\n          setIsListening(false);\r\n          setIsContent(0);\r\n        });\r\n    }\r\n  }, [isListening, finishL, setIsListening, setIsReceiving, setIsContent]);\r\n\r\n  return isListening || isReceiving ? (\r\n    <Listening id={id} setIsContent={setIsContent} isReceiving={isReceiving} setIsReceiving={setIsReceiving} setIsListening={setIsListening} />\r\n  ) : (\r\n    <div className=\"Home\">\r\n      <button className=\"transbutton\" alt=\"Stop Listening\" onClick={() => setIsListening(true)}>\r\n        <img src={MusiaLogo} className=\"App-logo-2\" alt=\"Logo\" />\r\n      </button>\r\n      <p className=\"NameButton\">\r\n        Cliquez sur l'icone pour démarrer l'écoute.\r\n      </p>\r\n      <button className=\"Button\" alt=\"Change to URL\" onClick={() => setIsContent(1)}>\r\n        Test URL\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}