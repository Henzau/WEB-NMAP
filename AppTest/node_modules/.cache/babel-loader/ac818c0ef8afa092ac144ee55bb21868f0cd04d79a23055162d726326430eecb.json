{"ast":null,"code":"import _toConsumableArray from \"C:/Users/blood/Documents/School/4A/PST/PST4A/MUSIARK/pst-4a-MusIA/app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"C:/Users/blood/Documents/School/4A/PST/PST4A/MUSIARK/pst-4a-MusIA/app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/blood/Documents/School/4A/PST/PST4A/MUSIARK/pst-4a-MusIA/app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport pointRadial from \"../pointRadial.js\";\nvar Bump = /*#__PURE__*/function () {\n  function Bump(context, x) {\n    _classCallCheck(this, Bump);\n    this._context = context;\n    this._x = x;\n  }\n  _createClass(Bump, [{\n    key: \"areaStart\",\n    value: function areaStart() {\n      this._line = 0;\n    }\n  }, {\n    key: \"areaEnd\",\n    value: function areaEnd() {\n      this._line = NaN;\n    }\n  }, {\n    key: \"lineStart\",\n    value: function lineStart() {\n      this._point = 0;\n    }\n  }, {\n    key: \"lineEnd\",\n    value: function lineEnd() {\n      if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n      this._line = 1 - this._line;\n    }\n  }, {\n    key: \"point\",\n    value: function point(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0:\n          {\n            this._point = 1;\n            if (this._line) this._context.lineTo(x, y);else this._context.moveTo(x, y);\n            break;\n          }\n        case 1:\n          this._point = 2;\n        // falls through\n        default:\n          {\n            if (this._x) this._context.bezierCurveTo(this._x0 = (this._x0 + x) / 2, this._y0, this._x0, y, x, y);else this._context.bezierCurveTo(this._x0, this._y0 = (this._y0 + y) / 2, x, this._y0, x, y);\n            break;\n          }\n      }\n      this._x0 = x, this._y0 = y;\n    }\n  }]);\n  return Bump;\n}();\nvar BumpRadial = /*#__PURE__*/function () {\n  function BumpRadial(context) {\n    _classCallCheck(this, BumpRadial);\n    this._context = context;\n  }\n  _createClass(BumpRadial, [{\n    key: \"lineStart\",\n    value: function lineStart() {\n      this._point = 0;\n    }\n  }, {\n    key: \"lineEnd\",\n    value: function lineEnd() {}\n  }, {\n    key: \"point\",\n    value: function point(x, y) {\n      x = +x, y = +y;\n      if (this._point === 0) {\n        this._point = 1;\n      } else {\n        var _this$_context, _this$_context2;\n        var p0 = pointRadial(this._x0, this._y0);\n        var p1 = pointRadial(this._x0, this._y0 = (this._y0 + y) / 2);\n        var p2 = pointRadial(x, this._y0);\n        var p3 = pointRadial(x, y);\n        (_this$_context = this._context).moveTo.apply(_this$_context, _toConsumableArray(p0));\n        (_this$_context2 = this._context).bezierCurveTo.apply(_this$_context2, _toConsumableArray(p1).concat(_toConsumableArray(p2), _toConsumableArray(p3)));\n      }\n      this._x0 = x, this._y0 = y;\n    }\n  }]);\n  return BumpRadial;\n}();\nexport function bumpX(context) {\n  return new Bump(context, true);\n}\nexport function bumpY(context) {\n  return new Bump(context, false);\n}\nexport function bumpRadial(context) {\n  return new BumpRadial(context);\n}","map":{"version":3,"names":["pointRadial","Bump","context","x","_context","_x","_line","NaN","_point","closePath","y","lineTo","moveTo","bezierCurveTo","_x0","_y0","BumpRadial","p0","p1","p2","p3","bumpX","bumpY","bumpRadial"],"sources":["C:/Users/blood/Documents/School/4A/PST/PST4A/MUSIARK/pst-4a-MusIA/app/node_modules/d3-shape/src/curve/bump.js"],"sourcesContent":["import pointRadial from \"../pointRadial.js\";\n\nclass Bump {\n  constructor(context, x) {\n    this._context = context;\n    this._x = x;\n  }\n  areaStart() {\n    this._line = 0;\n  }\n  areaEnd() {\n    this._line = NaN;\n  }\n  lineStart() {\n    this._point = 0;\n  }\n  lineEnd() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  }\n  point(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: {\n        this._point = 1;\n        if (this._line) this._context.lineTo(x, y);\n        else this._context.moveTo(x, y);\n        break;\n      }\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._x) this._context.bezierCurveTo(this._x0 = (this._x0 + x) / 2, this._y0, this._x0, y, x, y);\n        else this._context.bezierCurveTo(this._x0, this._y0 = (this._y0 + y) / 2, x, this._y0, x, y);\n        break;\n      }\n    }\n    this._x0 = x, this._y0 = y;\n  }\n}\n\nclass BumpRadial {\n  constructor(context) {\n    this._context = context;\n  }\n  lineStart() {\n    this._point = 0;\n  }\n  lineEnd() {}\n  point(x, y) {\n    x = +x, y = +y;\n    if (this._point === 0) {\n      this._point = 1;\n    } else {\n      const p0 = pointRadial(this._x0, this._y0);\n      const p1 = pointRadial(this._x0, this._y0 = (this._y0 + y) / 2);\n      const p2 = pointRadial(x, this._y0);\n      const p3 = pointRadial(x, y);\n      this._context.moveTo(...p0);\n      this._context.bezierCurveTo(...p1, ...p2, ...p3);\n    }\n    this._x0 = x, this._y0 = y;\n  }\n}\n\nexport function bumpX(context) {\n  return new Bump(context, true);\n}\n\nexport function bumpY(context) {\n  return new Bump(context, false);\n}\n\nexport function bumpRadial(context) {\n  return new BumpRadial(context);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}